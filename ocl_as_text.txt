1. invariant identifierIsMember
	Überprüfung ob gesetzter Identifier eh auch Member von Entity ist.
2. invariant attributeTypeNoneWhenEnum
	Überprüfung ob Attribut-type "none", wenn Enumeration referenziert wird.
3. invariant validBinaryRelationship
	* Überprüfung ob Opposites der relationShips aufeinander verweisen
	* Überprüfung ob das Target der opposite relationship wieder self ist
4. invariant validRelationshipBounds
	* Überprüfung ob 0 <= lowerbound < upperbound, es sei denn upperbound -1, dann
		nur 0 <= lowerbound
5. invariant attributePageElementMapsFormEntity
	* Überprüfung ob Attribute von AttributePageElement von Entity der dazugehörigen Form stammt
6. invariant relationshipPageElementMapsFormEntity
	* Überprüfung ob Relationship von RelationshipPageElement von Entity der dazugehörigen Form stammt
7. invariant TableClolumnElementMapsReferencedEntity
	* Überprüfung ob Attribute von Table-Column von Entity der _REFERENZIERTEN_ Form stammt
8. invariant validSelectionFieldType
	* Überprüfung ob SelectionFields Attribut-type Boolean oder Enum ist.
9. invariant validCompositCondition
	* Überprüfung ob Compositon EXAKT 2 Conditions referenziert.
10. invariant validAttributeValueCondition
	* Überprüfung ob AttributeValueCondition Page EXKLUSIV ODER (xor) PageElement referenziert
12. WELCOME FORM


(+1 chain super typing??)
https://tuwel.tuwien.ac.at/mod/forum/discuss.php?d=53388
self.relationships -> forAll(r: Relationship | r.opposite -> isEmpty() or r.opposite.target = self and r.opposite.opposite = r)